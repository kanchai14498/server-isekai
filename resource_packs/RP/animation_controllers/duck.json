{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.duck.controller": {
			"initial_state": "default",
			"states": {
				"default": {
					"variables": {
						"move_speed": {
							"input": "query.modified_move_speed",
							"remap_curve": {
								"0.0": 0,
								"0.25": 1
							}
						}
					},
					"animations": [
						"static",
						{
							"life": "query.is_saddled"
						},
						{
							"falling": "!query.is_on_ground"
						},
						{
							"move": "variable.move_speed"
						}
					],
					"transitions": [
						{
							"swimming": "q.property('dk:duck_modes')=='dk_duck_mode_water'"
						},
						{
							"fly": "q.property('dk:duck_modes')=='dk_duck_mode_avoid'"
						}
					],
					"blend_transition": 0.5
				},
				"swimming": {
					"variables": {
						"move_speed": {
							"input": "query.modified_move_speed",
							"remap_curve": {
								"0.0": 0,
								"0.25": 1
							}
						}
					},
					"animations": [
						"static",
						"swimming",
						{
							"swimming_move": "variable.move_speed"
						}
					],
					"transitions": [
						{
							"default": "q.property('dk:duck_modes')=='dk_duck_mode_ground'"
						},
						{
							"fly": "q.property('dk:duck_modes')=='dk_duck_mode_avoid'"
						}
					],
					"blend_transition": 0.5
				},
				"fly": {
					"animations": [
						"fly"
					],
					"transitions": [
						{
							"default": "q.property('dk:duck_modes')=='dk_duck_mode_ground'"
						}
					],
					"blend_transition": 0.5
				}
			}
		},
		"controller.animation.duck.look_at_target": {
			"initial_state": "default",
			"states": {
				"default": {
					"animations": [
						"look_at_target_default"
					],
					"transitions": [
						{
							"gliding": "query.is_gliding"
						},
						{
							"swimming": "query.is_swimming"
						}
					]
				},
				"gliding": {
					"animations": [
						"look_at_target_gliding"
					],
					"transitions": [
						{
							"swimming": "query.is_swimming"
						},
						{
							"default": "!query.is_gliding"
						}
					]
				},
				"swimming": {
					"animations": [
						"look_at_target_swimming"
					],
					"transitions": [
						{
							"gliding": "query.is_gliding"
						},
						{
							"default": "!query.is_swimming"
						}
					]
				}
			}
		}
	}
}